---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Tag from '../Tag.astro';
import { FadeInOnView } from '../animations';

const posts = await getCollection('blog', ({ data }) => {
  return !data.draft;
}).then(posts =>
  posts
    .sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
    .slice(0, 4)
);
---

<section class="max-w-[1000px] mx-auto" id="blog">
  <h2 class="font-bold mb-[5vh]">
    <span class="font-medium text-yellow dark:text-yellow"># </span>
    Blog
  </h2>

  <div class="grid grid-cols-[repeat(auto-fit,minmax(235px,1fr))] gap-5 sm:gap-px sm:-mx-5">
    {posts.map((post) => (
      <FadeInOnView
        client:visible
        as="article"
        className="grid grid-areas-post h-[350px] bg-white dark:bg-almost-black rounded-lg shadow-md overflow-hidden
          sm:h-[164px] sm:rounded-none"
      >
        {post.data.cover && (
          <div class="grid-in-image">
            <Image
              src={post.data.cover}
              alt={post.data.title}
              class="w-full h-full object-cover sm:rounded-lg"
            />
          </div>
        )}

        <header class="grid-in-meta">
          <time class="text-[0.875em] text-grey dark:text-darker-grey">
            {post.data.date.toLocaleDateString('en-US', {
              day: 'numeric',
              month: 'long',
              year: 'numeric'
            })}
          </time>
          <span class="mx-2 text-[0.875em] text-grey dark:text-darker-grey">â€¢</span>
          {post.data.readingTime && (
            <span class="text-[0.875em] text-grey dark:text-darker-grey">
              {post.data.readingTime}
            </span>
          )}
        </header>

        <a href={`/blog/${post.slug}`} class="grid-in-title no-underline">
          <h4 class="text-[1.25em] font-medium leading-tight mt-1.5 mb-0 sm:mt-px">
            {post.data.title}
          </h4>
        </a>

        <div class="grid-in-tags">
          {/* Only display the first two tags for visual consistency */}
          {post.data.tags?.slice(0, 2).map(tag => (
            <Tag>{tag}</Tag>
          ))}
        </div>
      </FadeInOnView>
    ))}
  </div>
</section>

<style>
  .grid-areas-post {
    grid-template:
      "image image image" 50%
      "..... ..... ....." 20px
      "..... meta  ....." auto
      "..... title ....." 1fr
      "..... tags  ....." auto
      "..... ..... ....." 20px / 20px auto 20px;
  }

  @media (max-width: 640px) {
    .grid-areas-post {
      grid-template:
        ".. ..... .. ..... .." 20px
        ".. meta  .. ..... .." auto
        ".. title .. image .." 80px
        ".. tags  .. ..... .." auto
        ".. ..... .. ..... .." 20px / 20px 1fr 16px 80px 20px;
    }
  }

  .grid-in-image { grid-area: image; }
  .grid-in-meta { grid-area: meta; }
  .grid-in-title { grid-area: title; }
  .grid-in-tags { grid-area: tags; }
</style>
